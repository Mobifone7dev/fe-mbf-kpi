import { NextResponse } from "next/server";
import { cookies } from "next/headers";
import { redirect } from "next/navigation";
import { signOut } from "next-auth/react";
import { getQSParamFromURL } from "../../../until/functions";

export async function GET(request: Request) {
    const URL = process.env.NEXTAUTH_APP_API_URL_SSL;

    if (!URL) {
        console.error("‚ùå L·ªói: NEXTAUTH_APP_API_URL kh√¥ng ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a");
        return NextResponse.json({ message: "API URL kh√¥ng ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a" }, { status: 500 });
    }

    const month = getQSParamFromURL("month", request.url);
    const kpiType = getQSParamFromURL("kpiType", request.url);
    const provincePt = getQSParamFromURL("provincePt", request.url);
    
    if (!month || !kpiType) {
        console.error("‚ùå Thi·∫øu tham s·ªë b·∫Øt bu·ªôc: month ho·∫∑c kpiType");
        return NextResponse.json({ message: "Thi·∫øu tham s·ªë month ho·∫∑c kpiType" }, { status: 400 });
    }

    // Chuy·ªÉn ƒë·ªïi format th√°ng t·ª´ "MM/YYYY" th√†nh "DD/MM/YYYY"
    const convertedMonth = `01/${month}`;

    const accessToken = cookies().get("accessToken")?.value;
    if (!accessToken) {
        console.error("‚ùå Kh√¥ng t√¨m th·∫•y accessToken");
        return NextResponse.json({ message: "Kh√¥ng t√¨m th·∫•y accessToken" }, { status: 401 });
    }

    // T·∫°o URL g·ªçi API backend
    const provinceQuery = provincePt ? `&provincePt=${provincePt}` : "";
    const apiUrl = `${URL}/dashboard/dashboard-export-excel-exec-kpi?month=${convertedMonth}&kpiType=${kpiType}${provinceQuery}`;
    
    console.log("üìå G·ªçi API backend:", apiUrl);

    try {
        const res = await fetch(apiUrl, {
            headers: { Authorization: `Bearer ${accessToken}` },
        });

        console.log("üìå Response status:", res.status, res.statusText);

        if (res.status === 403) {
            signOut({ redirect: false });
            redirect("/login");
        }

        if (!res.ok) {
            console.error("‚ùå L·ªói khi g·ªçi API backend:", res.status);
            return NextResponse.json({ success: false, message: "L·ªói t·ª´ API backend" }, { status: res.status });
        }

        const data = await res.json();
        return NextResponse.json({ success: true, result: data.result });

    } catch (error) {
        console.error("‚ùå L·ªói khi g·ªçi API:", error);
        return NextResponse.json({ message: "L·ªói server", error }, { status: 500 });
    }
}
